version: "3.9"

services:
  tomcat-app:
    image: <your-dockerhub-username>/smarthub-image:latest
    container_name: tomcat-container
    ports:
      - "8080:8080"
    depends_on:
      - db
    restart: always

  db:
    image: mysql:8.0
    container_name: mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: sah_db
      MYSQL_USER: sah_user
      MYSQL_PASSWORD: sah_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    restart: always

volumes:
  mysql-data:






# Use Tomcat as base image
FROM tomcat:9.0

# Remove default webapps
RUN rm -rf /usr/local/tomcat/webapps/*

# Copy WAR file to Tomcat webapps folder
COPY target/Smart-Assessment-Hub.war /usr/local/tomcat/webapps/ROOT.war

# Expose default Tomcat port
EXPOSE 8080

# Start Tomcat server
CMD ["catalina.sh", "run"]








# Use official OpenJDK image as base
FROM openjdk:17-jdk-alpine

# Set working directory inside the container
WORKDIR /app

# Copy the JAR file from local machine to container
COPY target/MJP-1.0-SNAPSHOT.jar app.jar

# Command to run the JAR
ENTRYPOINT ["java", "-jar", "app.jar"]




version: "3.9"

services:
  app:
    build: .
    container_name: mjp-app
    ports:
      - "8080:8080"        # Map host port to container port
    depends_on:
      - db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/mjpdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres

  db:
    image: postgres:15
    container_name: mjp-db
    environment:
      POSTGRES_DB: mjpdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

volumes:
  pgdata:










# Use Tomcat base image
FROM tomcat:9.0

# Copy WAR file generated by Maven into Tomcat webapps directory
COPY target/smma.war /usr/local/tomcat/webapps/

# Expose port 8080 for external access
EXPOSE 8080





version: '3.8'

services:
  smma-app:
    image: smma-web          # Docker image of SMMA created earlier
    container_name: smma-app
    ports:
      - "8080:8080"          # Expose Tomcat port
    depends_on:
      - mongo
    networks:
      - smma-network

  mongo:
    image: mongo:6.0          # Official MongoDB image
    container_name: smma-mongo
    ports:
      - "27017:27017"         # Expose MongoDB port
    volumes:
      - mongo-data:/data/db   # Persistent storage
    networks:
      - smma-network

volumes:
  mongo-data:

networks:
  smma-network:
